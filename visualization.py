import pandas as pd
import base64
from io import BytesIO
import matplotlib.pyplot as plt

def generate_verification_chart(verification_data):
    """Generate verification status pie chart"""
    if not verification_data:
        return ""
    
    try:
        
        fig, ax = plt.subplots(figsize=(8, 6))
        
        labels = list(verification_data.keys())
        sizes = list(verification_data.values())
        colors = {'verified': '#2ecc71', 'contested': '#e74c3c', 'unverified': '#f39c12'}
        chart_colors = [colors.get(label, '#95a5a6') for label in labels]
        
        ax.pie(sizes, labels=labels, colors=chart_colors, autopct='%1.1f%%', startangle=90)
        ax.set_title('Claim Verification Status')
        
        
        buffer = BytesIO()
        plt.savefig(buffer, format='png', bbox_inches='tight', dpi=150)
        buffer.seek(0)
        
        img_base64 = base64.b64encode(buffer.getvalue()).decode()
        plt.close()
        
        return f"data:image/png;base64,{img_base64}"
    except Exception as e:
        return f"<!-- Chart generation error: {str(e)} -->"

def format_report(research, critique, synthesis, verification_data):
    """Generate full markdown report"""
    chart_html = generate_verification_chart(verification_data)
    
    chart_section = ""
    if chart_html and not chart_html.startswith("<!--"):
        chart_section = f"<img src='{chart_html}' alt='Verification Chart' style='max-width: 500px; margin: 20px 0;'>"
    
    return f"""
# Technical Research Report

## Executive Summary
{synthesis.split('##')[0] if '##' in synthesis else synthesis[:500]}

---

## Verification Status
{chart_section}

**Verification Summary:**
{verification_data if verification_data else 'No verification data available'}

## Detailed Analysis
### Research Findings
{research}

### Critical Review
{critique}

### Full Synthesis
{synthesis}

---
*Report generated by Multi-Agent Research System*
"""